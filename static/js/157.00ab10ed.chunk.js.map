{"version":3,"file":"static/js/157.00ab10ed.chunk.js","mappings":"oRAEMA,EAAU,mCAEVC,EAAW,+BAEJC,EAAiB,WAC5B,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,wCAAqDD,GAC7D,EAEYI,EAAoB,SAAAC,GAC/B,OAAOF,EAAAA,EAAAA,IAAA,UACFF,EADE,+BAC6BI,EAD7B,oBACkDL,EADlD,8CAGR,EAEYM,EAAiB,SAAAC,GAC5B,OAAOJ,EAAAA,EAAAA,IAAA,UACFF,EADE,kBACgBM,EADhB,qBAC+BP,EAD/B,mBAGR,EAEYQ,EAAiB,SAAAD,GAC5B,OAAOJ,EAAAA,EAAAA,IAAA,UACFF,EADE,kBACgBM,EADhB,6BACuCP,EADvC,mBAGR,EAEYS,EAAoB,SAAAF,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UACFF,EADE,kBACgBM,EADhB,6BACuCP,EADvC,0BAGR,C,yIC9BYU,EAAYC,EAAAA,GAAAA,IAAH,+EAMTC,EAASD,EAAAA,GAAAA,IAAH,iF,SCNNE,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExBC,EAMED,EANFC,YACAC,EAKEF,EALFE,eACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,OAIIC,EAAYC,KAAKC,MAAqB,GAAfL,GACvBM,EAAaJ,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAExD,OACE,UAAClB,EAAD,YACE,SAACE,EAAD,CACEiB,IAAG,6CAAwCd,GAC3Ce,IAAKd,KAEP,4BACE,0BACGA,EADH,KAXkB,IAAIe,KAAKd,GAAce,cAWzC,QAGA,wCAAgBX,EAAhB,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAIK,SAIX,E,SCuBD,EA7CqB,WACnB,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRpC,EAAAA,EAAAA,IAAe2B,GAASU,MAAK,YAAe,IAAZ7B,EAAW,EAAXA,KAC9B2B,EAAS3B,EACV,GACF,GAAE,CAACmB,KAGF,iCACE,mBACEW,QAAS,WAAO,IAAD,IACbP,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUU,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAHH,qBAOCN,IAAS,SAAC3B,EAAD,CAAWC,KAAM0B,KAC3B,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMK,MAAOV,EAASU,MAAOE,GAAE,kBAAad,EAAb,SAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMY,MAAOV,EAASU,MAAOE,GAAE,kBAAad,EAAb,YAA/B,8BAMN,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/FetchMovies.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = 'e547d49db32dd8dd8191ece466e036a9';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTopMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/week?api_key=${KEY_API}`);\n};\n\nexport const fetchMoviesByName = nameMovie => {\n  return axios.get(\n    `${BASE_URL}/search/movie?query=${nameMovie}&api_key=${KEY_API}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const fetchMovieById = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}}?api_key=${KEY_API}&language=en-US`\n  );\n};\n\nexport const fetchMovieCast = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}}/credits?api_key=${KEY_API}&language=en-US`\n  );\n};\n\nexport const fetchMovieReviews = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}}/reviews?api_key=${KEY_API}&language=en-US&page=1`\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 250px;\n  height: 100%;\n`;\n","import { Container, Poster } from './MovieCard.styled';\n\nexport const MovieCard = ({ data }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  const movieYear = () => new Date(release_date).getFullYear();\n  const userScore = Math.trunc(vote_average * 10);\n  const genresName = genres.map(genre => genre.name).join(' ');\n\n  return (\n    <Container>\n      <Poster\n        src={`https://image.tmdb.org/t/p/original${poster_path}`}\n        alt={original_title}\n      />\n      <div>\n        <h2>\n          {original_title} ({movieYear()})\n        </h2>\n        <p>User score: {userScore}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{genresName}</p>\n      </div>\n    </Container>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchMovieById } from 'api/FetchMovies';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(({ data }) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          navigate(location?.state?.from ?? '/');\n        }}\n      >\n        Go back\n      </button>\n      {movie && <MovieCard data={movie} />}\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link state={location.state} to={`/movies/${movieId}/cast`}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={location.state} to={`/movies/${movieId}/reviews`}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY_API","BASE_URL","fetchTopMovies","axios","fetchMoviesByName","nameMovie","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","Container","styled","Poster","MovieCard","data","poster_path","original_title","release_date","vote_average","overview","genres","userScore","Math","trunc","genresName","map","genre","name","join","src","alt","Date","getFullYear","movieId","useParams","location","useLocation","navigate","useNavigate","useState","movie","setMovie","useEffect","then","onClick","state","from","to","Suspense","fallback","Loader"],"sourceRoot":""}